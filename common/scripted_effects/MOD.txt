d_wic = {
    clear_array = global.wi_countries
}
d_mtest = {
    177 = {add_dynamic_modifier = {modifier = SFL_sm_economic_zone_modifier}}
}

####

delete_dirian_militia = {
    delete_units = {
        division_template = "Democrat Militia"
        disband = yes
    }
	delete_units = {
        division_template = "Democrat Militia 2"
        disband = yes
    }
	delete_units = {
        division_template = "Democrat Militia 3"
        disband = yes
    }
	delete_units = {
        division_template = "KRT armor brigade"
        disband = yes
    }
	delete_units = {
        division_template = "KRT mechanized brigade"
        disband = yes
    }
    delete_units = {
        division_template = "Communist Militia"
        disband = yes
    }
	delete_units = {
        division_template = "Communist Militia 2"
        disband = yes
    }
	delete_units = {
        division_template = "Communist Militia 3"
        disband = yes
    }
    delete_units = {
        division_template = "Pupil Militia"
        disband = yes
    }
    delete_units = {
        division_template = "Syndicat militia"
        disband = yes
    }
}


d_calc_wi = {
    set_variable = {division_inf_factor = num_divisions}
    multiply_variable = {division_inf_factor = 0.025}

    set_variable = {factories_inf_factor = num_of_factories}
    multiply_variable = {factories_inf_factor = 0.03}

    set_variable = {nuke_inf_factor = num_of_nukes}
    multiply_variable = {nuke_inf_factor = 0.5}

    set_temp_variable = {oil_inf_factor = resource_produced@oil}
    multiply_temp_variable = {oil_inf_factor = 0.125}

    set_temp_variable = {aluminium_inf_factor = resource_produced@aluminium}
    multiply_temp_variable = {aluminium_inf_factor = 0.325}

    set_temp_variable = {rubber_inf_factor = resource_produced@rubber}
    multiply_temp_variable = {rubber_inf_factor = 0.125}

    set_temp_variable = {tungsten_inf_factor = resource_produced@tungsten}
    multiply_temp_variable = {tungsten_inf_factor = 0.8}

    set_temp_variable = {steel_inf_factor = resource_produced@steel}
    multiply_temp_variable = {steel_inf_factor = 0.1}

    set_temp_variable = {chromium_inf_factor = resource_produced@chromium}
    multiply_temp_variable = {chromium_inf_factor = 0.179}

    set_temp_variable = {uranium_inf_factor = resource_produced@uranium}
    multiply_temp_variable = {uranium_inf_factor = 1}

    set_variable = {resources_inf_factor = 0}
    add_to_variable = {resources_inf_factor = oil_inf_factor}
    add_to_variable = {resources_inf_factor = aluminium_inf_factor}
    add_to_variable = {resources_inf_factor = rubber_inf_factor}
    add_to_variable = {resources_inf_factor = tungsten_inf_factor}
    add_to_variable = {resources_inf_factor = steel_inf_factor}
    add_to_variable = {resources_inf_factor = chromium_inf_factor}
    add_to_variable = {resources_inf_factor = uranium_inf_factor}
    multiply_variable = {resources_inf_factor = 0.015}


    set_temp_variable = {eoil_inf_factor = resource_exported@oil}
    multiply_temp_variable = {eoil_inf_factor = 0.125}

    set_temp_variable = {ealuminium_inf_factor = resource_exported@aluminium}
    multiply_temp_variable = {ealuminium_inf_factor = 0.325}

    set_temp_variable = {erubber_inf_factor = resource_exported@rubber}
    multiply_temp_variable = {erubber_inf_factor = 0.125}

    set_temp_variable = {etungsten_inf_factor = resource_exported@tungsten}
    multiply_temp_variable = {etungsten_inf_factor = 0.8}

    set_temp_variable = {esteel_inf_factor = resource_exported@steel}
    multiply_temp_variable = {esteel_inf_factor = 0.1}

    set_temp_variable = {echromium_inf_factor = resource_exported@chromium}
    multiply_temp_variable = {echromium_inf_factor = 0.179}

    set_temp_variable = {euranium_inf_factor = resource_exported@uranium}
    multiply_temp_variable = {euranium_inf_factor = 1}

    set_variable = {eresources_inf_factor = 0}
    add_to_variable = {eresources_inf_factor = eoil_inf_factor}
    add_to_variable = {eresources_inf_factor = ealuminium_inf_factor}
    add_to_variable = {eresources_inf_factor = erubber_inf_factor}
    add_to_variable = {eresources_inf_factor = etungsten_inf_factor}
    add_to_variable = {eresources_inf_factor = esteel_inf_factor}
    add_to_variable = {eresources_inf_factor = echromium_inf_factor}
    add_to_variable = {eresources_inf_factor = euranium_inf_factor}
    multiply_variable = {eresources_inf_factor = 0.03}
    

    set_variable = {world_influence = 0}
    add_to_variable = {world_influence = division_inf_factor}
    add_to_variable = {world_influence = factories_inf_factor}
    #add_to_variable = {world_influence = nuke_inf_factor}
    add_to_variable = {world_influence = resources_inf_factor}
    add_to_variable = {world_influence = eresources_inf_factor}

    set_variable = { winfluence_cost = 1}
    add_to_variable = { winfluence_cost = modifier@winfluence_modifier }
    multiply_variable = {world_influence = winfluence_cost}
    
    #add_to_array = {global.wi_values = world_influence}
    #set_variable = {global.wi_countries^world_influence = THIS}

    set_variable = { crysis_influence = world_influence }
    add_to_variable = { crysis_influence = nuke_inf_factor }
}

d_calc_wi_e = {
    #clear_array = global.wi_values
    every_country = {
        #limit = {is_major = yes}
        d_calc_wi = yes
    }
}

d_sort_wi = {
    #set_temp_variable = { table_qs_compare = 0 }
    #set_variable = {high = global.wi_countries^num}
    #subtract_from_variable = { high = 1 }
    #set_variable = { low = 0 }
    #table_quicksort = yes
    #start_create_sorted_array = yes

    for_each_loop = {
		array = global.wi_countries
		set_temp_variable = { j = i }
		subtract_from_temp_variable = { j = 1 }
		while_loop_effect = {
			limit = {
				check_variable = {
					var = j
					value = 0
					compare = greater_than_or_equals
				}
                var:v = {
                    var:global.wi_countries^j = {
                        check_variable = {
                            var = PREV.world_influence
                            value = world_influence
                            compare = greater_than
                        }
                    }
                }
			}
			set_temp_variable = { j_plus_1 = j }
			add_to_temp_variable = { j_plus_1 = 1 }
			set_variable = { global.wi_countries^j_plus_1 = global.wi_countries^j }
			subtract_from_temp_variable = { j = 1 }
		}
		set_temp_variable = { j_plus_1 = j }
		add_to_temp_variable = { j_plus_1 = 1 }
		set_variable = { global.wi_countries^j_plus_1 = v }
	}

}

war_crysis_ban_factions = {
    if = {
        limit = {always = yes} #{not = {is_in_faction}}

        if = {
            limit = {has_rule = can_join_factions}
            set_country_flag = wcrysis_can_join_factions
        }
        else = {clr_country_flag = wcrysis_can_join_factions}
        
        set_rule = {can_join_factions = no}
    }
    
    set_country_flag = banned_for_factions
}

war_crysis_unban_factions = {
    if = {
        limit = {has_country_flag = wcrysis_can_join_factions}
        set_rule = {can_join_factions = yes}
        clr_country_flag = wcrysis_can_join_factions
    }
    clr_country_flag = banned_for_factions
}

encount_minors = {
    clear_array = minor_countries
    every_owned_state = {
        for_each_loop = {
            array = THIS.core_countries
            value = v
            if = {
                limit = {
                    var:v = {not = {tag = PREV.owner} not = {country_exists = THIS}}
                    owner = {not = {is_in_array = {minor_countries = v}}}
                }
                owner = {add_to_array = {minor_countries = v}}
            }
        }
    }
}

encount_majors = { #call in crysis  sender
    add_threat = 8
    clear_array = crysis_senders
    clear_array = crysis_tos
    clear_array = crysis_majors

    set_temp_variable = { sender_cr = sender_crysis }
    set_temp_variable = { to_cr = to_crysis }

    var:sender_crysis = {set_variable = {political_crysis_member = THIS}}
    #set_variable = {crto = to_crysis}
    var:to_crysis = {set_variable = {political_crysis_member = PREV} set_variable = {crto = PREV.to_crysis}}

    every_country = {
        limit = {
            not = {tag = PREV.sender_crysis}
            not = {tag = PREV.to_crysis}
            not = {has_variable = political_crysis_member}
            OR = {
                AND = {
                    var:sender_cr = {is_major = yes}
                    is_major = yes
                }
                AND = {
                    var:sender_cr = {is_major = no}
                    OR = {
                        var:sender_cr = {is_in_array = {neighbors = PREV}}
                        var:to_cr = {is_in_array = {neighbors = PREV}}
                    }
                }
            }
            has_war = no
            is_subject = no
            
            not = {var:sender_cr = {is_in_array = {crysis_majors = PREV}}}
        }

        var:sender_cr = {add_to_array = {crysis_majors = PREV}}
        set_variable = {political_crysis_member = PREV}
        #set_variable = {crto = to_crysis}
    }
    if = {
        limit = {var:to_crysis = {is_subject = yes}}
        var:to_crysis = {
            OVERLORD = {
                var:sender_crysis = {add_to_array = {crysis_majors = PREV}}
                set_variable = {political_crysis_member = PREV.PREV}
            }
        }
    }
}

d_calc_crysis = { #call in crysis sender

    set_temp_variable = { sender_cr = sender_crysis }
    set_temp_variable = { to_cr = to_crysis }

    for_each_scope_loop = {
        array = crysis_senders
        set_variable = {is_highest_crysis = 1}
    }
    for_each_scope_loop = {
        array = crysis_tos
        set_variable = {is_highest_crysis = 1}
    }

    set_variable = {sender_crysis_op_status = 1}
    set_variable = {to_crysis_op_status = 1}

    set_temp_variable = {cr_smax = 0}
    set_temp_variable = {cr_tmax = 0}

    set_variable = {cr_send_op = sender_crysis}
    set_variable = {cr_to_op = to_crysis}


    set_variable = {crysis_s_totalwi = 0}
    set_variable = {crysis_t_totalwi = 0}
    for_each_scope_loop = {
        array = crysis_senders
        if = {
            limit = {check_variable = {crysis_influence > cr_smax}}
            set_temp_variable = {cr_smax = crysis_influence}
            var:sender_cr = {set_variable = {cr_send_op = PREV}}
        }
        var:sender_cr = {add_to_variable = {crysis_s_totalwi = PREV.crysis_influence}}
    }
    for_each_scope_loop = {
        array = crysis_tos
        if = {
            limit = {check_variable = {crysis_influence > cr_tmax}}
            set_temp_variable = {cr_tmax = crysis_influence}
            var:sender_cr = {set_variable = {cr_to_op = PREV}}
        }
        var:sender_cr = {add_to_variable = {crysis_t_totalwi = PREV.crysis_influence}}
    }

    var:sender_crysis = {
        if = {
            limit = {check_variable = {cr_smax > crysis_influence}}
            var:cr_send_op = { set_variable = {is_highest_crysis = 2} }
        }
        else = {
            set_variable = {cr_send_op = THIS}
            set_variable = {sender_crysis_op_status = 2}
        }
        add_to_variable = {crysis_s_totalwi = crysis_influence}
    }

    var:to_crysis = {
        if = {
            limit = {var:sender_cr = {check_variable = {cr_smax > PREV.crysis_influence}}}
            var:sender_cr = {var:cr_to_op = { set_variable = {is_highest_crysis = 2} }}
        }
        else = {
            var:sender_cr = {
                set_variable = {cr_to_op = PREV}
                set_variable = {to_crysis_op_status = 2}
            }
        }
        var:sender_cr = {add_to_variable = {crysis_t_totalwi = PREV.crysis_influence}}
    }
}

force_press = {
    if = {
        limit = {NOT = {check_variable = {cr_d_status = 3}}}
        var:cr_to_op = {set_country_flag = crysis_press}
    }
    if = {
        limit = {NOT = {check_variable = {cr_a_status = 3}}}
        var:cr_send_op = {set_country_flag = crysis_press}
    }
}

crysis_reward = { #call in crysis sender
    set_temp_variable = { sender_cr = sender_crysis }
    set_temp_variable = { to_cr = to_crysis }
    log = "CREWARD"
    if = { #корки
        limit = {check_variable = {type_crysis = 1}}
        var:to_crysis = {
            every_owned_state = {
                limit = {
                    OR = {
                        is_claimed_by = PREV.PREV.sender_crysis
                        is_core_of = PREV.PREV.sender_crysis
                    }
                }
                var:sender_cr = {
                    transfer_state = PREV
                }
            }
        }
    }
    else_if = { #минор
        limit = {check_variable = {type_crysis = 2}}
        var:to_crysis = {
            release_on_controlled = minor_crysis
        }
    }
}

d_show_crysis = {
    if = {
        limit = {has_country_flag = cheat_show_cr_win}
        clr_country_flag = cheat_show_cr_win
    }
    else = {
        set_country_flag = cheat_show_cr_win
    }
}

escalation_decision_effect = {
    add_days_mission_timeout = {mission = esc_timer days = 20}
    if = {
        limit = {has_country_flag = escalation_delay}
        hidden_effect = {
            every_other_country = {
                limit = {
                    check_variable = { escalation_member = ROOT.escalation_member }
                    if = {
                        limit = {ROOT = {has_country_flag = escalation_on_sender}}
                        has_country_flag = escalation_on_to
                    }
                    else = {
                        has_country_flag = escalation_on_sender
                    }
                }

                add_to_variable = { escalation_score = 5 }
            }
        }
    }
    set_country_flag = {
        flag = escalation_delay
        value = 1
        days = 7
    }
}
